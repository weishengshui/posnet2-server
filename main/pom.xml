<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.chinarewards.qqgbvpn</groupId>
		<artifactId>parent</artifactId>
		<version>0.3.2</version>
		<relativePath>..</relativePath>
	</parent>
	<artifactId>main</artifactId>
	<name>POS Network Server 2</name>
	<version>0.3.2</version>
	<description>Server for POS Network Server version 2</description>
	<dependencies>
	
		<!-- Google Guice - Dependency injection -->
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
		</dependency>
		<!-- 
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-multibindings</artifactId>
		</dependency>
		 -->
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-persist</artifactId>
		</dependency>

		<!-- JPA related -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>ejb3-persistence</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>

		<!-- Connection Pooling using c3p0 -->
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-c3p0</artifactId>
		    <version>3.6.7.Final</version>
		    <scope>runtime</scope>
		</dependency>

		<!-- MYSQL -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- Apache Mina - Socket -->
		<dependency>
			<groupId>org.apache.mina</groupId>
			<artifactId>mina-core</artifactId>
		</dependency>

		<!-- JSON -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>

		<!-- Configuration -->
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<exclusions>
				<!-- Use slf4j to exclude it -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Command line (CLI) -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- China Rewards -->
		<!-- QQ group buying related dependencies -->
		<dependency>
			<groupId>com.chinarewards.qqgbvpn</groupId>
			<artifactId>domain</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.chinarewards.qqgbvpn</groupId>
			<artifactId>core</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.chinarewards.qqgbvpn</groupId>
			<artifactId>qqapi</artifactId>
			<version>${qqapi.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- qqmeishi-wsapi -->
		<dependency>
			<groupId>com.chinarewards.qq.meishi</groupId>
			<artifactId>qqmeishi-wsapi</artifactId>
			<version>${qqmeishi.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- external-api -->
		<dependency>
			<groupId>com.chinarewards.qqgbvpn</groupId>
			<artifactId>external-api</artifactId>
			<version>${posnet2.ext.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.chinarewards</groupId>
			<artifactId>utils</artifactId>
			<version>2.2.0</version>
		</dependency>

		<!-- Logging -->
		<!-- Concrete (and native) implementation of SLF4J -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- Test Scope STARTS -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- For mocking live Servlet container -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-servlet-tester</artifactId>
			<version>6.1.26</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.25</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-util</artifactId>
			<version>6.1.25</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-servlet-tester</artifactId>
			<version>6.1.16</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Contains handy API -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r09</version>
			<scope>test</scope>
		</dependency>

		<!-- It works with JUnit's log output? -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<!-- Test Scope ENDS -->
	</dependencies>
	<properties>
		<dbdeploy.version>3.0M3</dbdeploy.version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>com.chinarewards.maven.plugins</groupId>
				<artifactId>maven-appinfo-plugin</artifactId>
				<version>0.1.0</version>
				<executions>
					<execution>
						<goals>
							<goal>appinfo</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- For packaging the project as a jar which is executable -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.chinarewards.qqgbvpn.main.Main</mainClass>
							<packageName>com.chinarewards.qqgbvpn.main</packageName>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<id>generate-schema</id>
						<phase>package</phase>
						<goals>
							<goal>hbm2ddl</goal>
						</goals>
						<configuration>
							<components>
								<component>
									<name>hbm2ddl</name>
									<implementation>jpaconfiguration</implementation>
								</component>
							</components>
							<componentProperties>
								<export>false</export><!-- do not export to the database -->
								<drop>false</drop>
								<outputfilename>schema.ddl</outputfilename>
								<propertyfile>src/db/export.properties</propertyfile>
								<format>true</format>
							</componentProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.dbdeploy</groupId>
									<artifactId>dbdeploy-cli</artifactId>
									<version>${dbdeploy.version}</version>
									<type>jar</type>
									<outputDirectory>${project.build.directory}/bin</outputDirectory>
									<destFileName>dbdeploy-cli.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>com.dbdeploy</groupId>
									<artifactId>dbdeploy-core</artifactId>
									<version>${dbdeploy.version}</version>
									<type>jar</type>
									<outputDirectory>${project.build.directory}/bin</outputDirectory>
									<destFileName>dbdeploy-core.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>com.dbdeploy</groupId>
									<artifactId>dbdeploy-ant</artifactId>
									<version>${dbdeploy.version}</version>
									<type>jar</type>
									<outputDirectory>${project.build.directory}/bin</outputDirectory>
									<destFileName>dbdeploy-ant.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<descriptors>
						<descriptor>src/assemble/bin.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
						<version>${slf4j.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<!-- Try to simply run the main program -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<classpathScope>test</classpathScope>
					<includeProjectDependencies>true</includeProjectDependencies>
					<includePluginDependencies>false</includePluginDependencies>
					<mainClass>com.chinarewards.qqgbvpn.main.Main</mainClass>
					<arguments>
						<argument>-d</argument>
						<argument>${project.basedir}</argument>
					</arguments>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<inceptionYear>2011</inceptionYear>
	<organization>
		<name>China Rewards</name>
		<url>http://www.china-rewards.com</url>
	</organization>
	<scm>
		<connection>git@git.dev.china-rewards.com:qqgbvpn/qqgbvpn-server.git</connection>
		<developerConnection>scm:git:ssh://git@git.dev.china-rewards.com/qqgbvpn/qqgbvpn-server.git</developerConnection>
	</scm>
	<issueManagement>
		<system>Bugzilla</system>
		<url>http://bugs.dev.china-rewards.com</url>
	</issueManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>http://build.dev.china-rewards.com:8080/</url>
	</ciManagement>
</project>
